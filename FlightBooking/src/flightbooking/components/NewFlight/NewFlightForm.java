/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package flightbooking.components.NewFlight;
import flightbooking.Main;

import flightbooking.components.ReadWrite.FileWrite;
import flightbooking.components.NewFlight.NewFlightComponents;


import javax.swing.ButtonModel;
/*
 *
 * @author night
 */
public class NewFlightForm extends javax.swing.JFrame {
    
     private boolean isSeatTypeSelected = false;
     public static boolean flightExists = false;
     private static String genFlightId;
    /**
     * Creates new form AddNewFlight
     */
    public NewFlightForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        create = new javax.swing.JTabbedPane();
        bookFlight = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        statusButton = new javax.swing.ButtonGroup();
        confirmationDialog = new javax.swing.JDialog();
        flightId2 = new javax.swing.JLabel();
        airplaneCode2 = new javax.swing.JLabel();
        departureDate2 = new javax.swing.JLabel();
        departureTime2 = new javax.swing.JLabel();
        destination2 = new javax.swing.JLabel();
        vacantSeat2 = new javax.swing.JLabel();
        seatType2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addFlightCancel = new javax.swing.JButton();
        addFlightConfirm = new javax.swing.JButton();
        remarksLabel = new javax.swing.JLabel();
        flightIdLabel = new javax.swing.JLabel();
        airplaneCodeLabel = new javax.swing.JLabel();
        destinationLabel = new javax.swing.JLabel();
        departureDateLabel = new javax.swing.JLabel();
        departureTimeLabel = new javax.swing.JLabel();
        vacantSeatLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        seatTypeLabel = new javax.swing.JLabel();
        seatTypeRegular = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        setRegular = new javax.swing.JButton();
        seatTypeVip = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        setVip = new javax.swing.JButton();
        flightExist = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        okFlightExist = new javax.swing.JButton();
        seatTypeButtonGroup = new javax.swing.ButtonGroup();
        addNewFlight = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        generateFlightID = new javax.swing.JButton();
        remarksField = new javax.swing.JTextField();
        mainMenu = new javax.swing.JButton();
        flightId = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        destination = new javax.swing.JLabel();
        seatType = new javax.swing.JLabel();
        destinationComboBox = new javax.swing.JComboBox<>();
        flightIdField = new javax.swing.JTextField();
        vacantSeatField = new javax.swing.JFormattedTextField();
        departureTime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        statusOk = new javax.swing.JCheckBox();
        statusCancelled = new javax.swing.JCheckBox();
        airplaneCodeField = new javax.swing.JTextField();
        regularButton = new javax.swing.JCheckBox();
        departureDateFormattedField = new javax.swing.JFormattedTextField();
        vacantSeatNotify = new javax.swing.JTextField();
        departureDate = new javax.swing.JLabel();
        vacantSeat = new javax.swing.JLabel();
        airCodeNotify = new javax.swing.JTextField();
        departureTimeFormattedField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        airplaneCode = new javax.swing.JLabel();
        vipButton = new javax.swing.JCheckBox();

        create.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        create.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        create.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        bookFlight.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        bookFlight.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel14.setText("Seat Type");
        bookFlight.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 160, 50));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel15.setText("No. of Seats to Reserve");
        bookFlight.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 580, 230, 50));

        jLabel16.setText("Flight ID");
        bookFlight.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 100, 50));

        jLabel17.setText("Book Number");
        bookFlight.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 140, 50));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel18.setText("Departure Date");
        bookFlight.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 160, 50));

        jLabel19.setText("Airplane Code");
        bookFlight.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 150, 50));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel20.setText("Departure Time");
        bookFlight.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 160, 50));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel21.setText("Destination");
        bookFlight.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 160, 50));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 130, 50));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 130, 50));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 130, 50));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 130, 50));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 130, 50));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookFlight.add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 130, 50));

        jTable1.setAutoCreateColumnsFromModel(false);
        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Destination", "DepartureDate", "DepartureTime", "FlightId", "AirplaneCode", "SeatType"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowGrid(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable1);

        bookFlight.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 560, 400));

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        bookFlight.add(jFormattedTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 580, 110, 50));

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1.setFocusable(false);
        bookFlight.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 150, 50));

        jButton1.setText("RESERVE");
        bookFlight.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 590, 120, 30));

        create.addTab("Book Flight", bookFlight);

        confirmationDialog.setLocationByPlatform(true);
        confirmationDialog.setMinimumSize(new java.awt.Dimension(800, 650));
        confirmationDialog.setModal(true);
        confirmationDialog.setResizable(false);
        confirmationDialog.setSize(new java.awt.Dimension(700, 700));
        confirmationDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        flightId2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        flightId2.setText("Flight I.D.");
        confirmationDialog.getContentPane().add(flightId2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 170, 38));

        airplaneCode2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        airplaneCode2.setText("Airplane Code");
        confirmationDialog.getContentPane().add(airplaneCode2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 170, 39));

        departureDate2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departureDate2.setText("Departure Date");
        confirmationDialog.getContentPane().add(departureDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 230, 38));

        departureTime2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departureTime2.setText("Departure Time");
        confirmationDialog.getContentPane().add(departureTime2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 220, 38));

        destination2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        destination2.setText("Destination");
        confirmationDialog.getContentPane().add(destination2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 190, 39));

        vacantSeat2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        vacantSeat2.setText("Vacant Seat");
        confirmationDialog.getContentPane().add(vacantSeat2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 210, 39));

        seatType2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        seatType2.setText("Seat Type");
        confirmationDialog.getContentPane().add(seatType2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 220, 39));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("STATUS:");
        confirmationDialog.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, 230, 39));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel12.setText("Remarks");
        confirmationDialog.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 150, 39));

        addFlightCancel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addFlightCancel.setText("CANCEL");
        addFlightCancel.setPreferredSize(new java.awt.Dimension(130, 39));
        addFlightCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightCancelActionPerformed(evt);
            }
        });
        confirmationDialog.getContentPane().add(addFlightCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, 150, 40));

        addFlightConfirm.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addFlightConfirm.setText("ADD FLIGHT");
        addFlightConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFlightConfirmMouseClicked(evt);
            }
        });
        confirmationDialog.getContentPane().add(addFlightConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, -1, 40));

        remarksLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remarksLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(remarksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 300, 350));

        flightIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        flightIdLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(flightIdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 160, 40));

        airplaneCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        airplaneCodeLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(airplaneCodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 160, 40));

        destinationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        destinationLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(destinationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 160, 40));

        departureDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departureDateLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(departureDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 160, 40));

        departureTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departureTimeLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(departureTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 160, 40));

        vacantSeatLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vacantSeatLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(vacantSeatLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 160, 40));

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 160, 40));

        seatTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seatTypeLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmationDialog.getContentPane().add(seatTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 160, 40));

        seatTypeRegular.setLocationByPlatform(true);
        seatTypeRegular.setMinimumSize(new java.awt.Dimension(500, 130));
        seatTypeRegular.setModal(true);
        seatTypeRegular.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        seatTypeRegular.setSize(new java.awt.Dimension(500, 130));
        seatTypeRegular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seatTypeRegularMouseClicked(evt);
            }
        });
        seatTypeRegular.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setMinimumSize(seatTypeRegular.getPreferredSize());
        jScrollPane1.setPreferredSize(seatTypeRegular.getPreferredSize());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setTabSize(9);
        jTextArea1.setText("Vip Seat Type for this Flight is already registered");
        jTextArea1.setToolTipText("");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        seatTypeRegular.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 460, 30));

        setRegular.setText("ok");
        setRegular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setRegularMouseClicked(evt);
            }
        });
        setRegular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRegularActionPerformed(evt);
            }
        });
        seatTypeRegular.getContentPane().add(setRegular, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        seatTypeVip.setLocationByPlatform(true);
        seatTypeVip.setMinimumSize(new java.awt.Dimension(520, 130));
        seatTypeVip.setModal(true);
        seatTypeVip.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        seatTypeVip.setResizable(false);
        seatTypeVip.setSize(new java.awt.Dimension(520, 130));
        seatTypeVip.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setMinimumSize(seatTypeVip.getPreferredSize());
        jScrollPane2.setPreferredSize(seatTypeVip.getPreferredSize());

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(2);
        jTextArea2.setTabSize(9);
        jTextArea2.setText("Regular Seat Type for this Flight is already registered");
        jTextArea2.setToolTipText("");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setFocusable(false);
        jScrollPane2.setViewportView(jTextArea2);

        seatTypeVip.getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 500, 30));

        setVip.setText("ok");
        setVip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setVipMouseClicked(evt);
            }
        });
        setVip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setVipActionPerformed(evt);
            }
        });
        seatTypeVip.getContentPane().add(setVip, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));

        flightExist.setLocationByPlatform(true);
        flightExist.setMinimumSize(new java.awt.Dimension(300, 130));
        flightExist.setModal(true);
        flightExist.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        flightExist.setResizable(false);
        flightExist.setSize(new java.awt.Dimension(300, 130));
        flightExist.setType(java.awt.Window.Type.UTILITY);
        flightExist.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setMinimumSize(new java.awt.Dimension(300, 120));
        jScrollPane3.setName(""); // NOI18N
        jScrollPane3.setPreferredSize(new java.awt.Dimension(300, 120));

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(2);
        jTextArea3.setTabSize(9);
        jTextArea3.setText("Flight is already registered!");
        jTextArea3.setToolTipText("");
        jTextArea3.setWrapStyleWord(true);
        jTextArea3.setFocusable(false);
        jScrollPane3.setViewportView(jTextArea3);

        flightExist.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 280, 30));

        okFlightExist.setText("ok");
        okFlightExist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okFlightExistMouseClicked(evt);
            }
        });
        okFlightExist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okFlightExistActionPerformed(evt);
            }
        });
        flightExist.getContentPane().add(okFlightExist, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1016, 700));
        setPreferredSize(new java.awt.Dimension(1016, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        addNewFlight.setForeground(new java.awt.Color(255, 255, 255));
        addNewFlight.setRequestFocusEnabled(false);
        addNewFlight.setVerifyInputWhenFocusTarget(false);
        addNewFlight.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("REMARKS");
        addNewFlight.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 120, 39));

        generateFlightID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        generateFlightID.setText("GENERATE");
        generateFlightID.setPreferredSize(new java.awt.Dimension(130, 39));
        generateFlightID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateFlightIDMouseClicked(evt);
            }
        });
        generateFlightID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateFlightIDActionPerformed(evt);
            }
        });
        addNewFlight.add(generateFlightID, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 560, 190, 40));

        remarksField.setColumns(10);
        remarksField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        addNewFlight.add(remarksField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 500, 130));

        mainMenu.setText("Main Menu");
        mainMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainMenuMouseClicked(evt);
            }
        });
        addNewFlight.add(mainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, 130, -1));

        flightId.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        flightId.setText("FLIGHT ID");
        addNewFlight.add(flightId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 150, 38));

        jLabel2.setFont(new java.awt.Font("C059", 0, 15)); // NOI18N
        jLabel2.setText("d-mm-yyyy");
        addNewFlight.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, 90, 22));

        destination.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        destination.setText("DESTINATION");
        addNewFlight.add(destination, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 150, 39));

        seatType.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        seatType.setText("SEAT TYPE");
        addNewFlight.add(seatType, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, 39));

        destinationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAVAO", "CEBU", "MANILA", "CDO" }));
        addNewFlight.add(destinationComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 130, 40));

        flightIdField.setEditable(false);
        flightIdField.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        flightIdField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        flightIdField.setText("TO BE GENERATED");
        flightIdField.setActionCommand("<Not Set>");
        flightIdField.setFocusable(false);
        flightIdField.setPreferredSize(new java.awt.Dimension(130, 3));
        addNewFlight.add(flightIdField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, 39));

        vacantSeatField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#####0"))));
        vacantSeatField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        addNewFlight.add(vacantSeatField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 130, 40));

        departureTime.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departureTime.setText("DEPARTURE TIME");
        addNewFlight.add(departureTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 190, 38));

        jLabel3.setFont(new java.awt.Font("C059", 0, 15)); // NOI18N
        jLabel3.setText("AA####");
        addNewFlight.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 80, 80, -1));

        statusButton.add(statusOk);
        statusOk.setSelected(true);
        statusOk.setText("OK");
        statusOk.setToolTipText("ok");
        addNewFlight.add(statusOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 290, 75, 30));

        statusButton.add(statusCancelled);
        statusCancelled.setText("CANCELLED");
        statusCancelled.setToolTipText("cancelled");
        addNewFlight.add(statusCancelled, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 320, 180, -1));

        airplaneCodeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        airplaneCodeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                airplaneCodeFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                airplaneCodeFieldKeyTyped(evt);
            }
        });
        addNewFlight.add(airplaneCodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, 130, 39));

        seatTypeButtonGroup.add(regularButton);
        regularButton.setText("Regular");
        regularButton.setToolTipText("cancelled");
        regularButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regularButtonMouseClicked(evt);
            }
        });
        addNewFlight.add(regularButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 100, -1));

        departureDateFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-y"))));
        departureDateFormattedField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        departureDateFormattedField.setPreferredSize(new java.awt.Dimension(130, 3));
        addNewFlight.add(departureDateFormattedField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, -1, 39));

        vacantSeatNotify.setEditable(false);
        vacantSeatNotify.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vacantSeatNotify.setAutoscrolls(false);
        vacantSeatNotify.setBorder(null);
        vacantSeatNotify.setFocusable(false);
        vacantSeatNotify.setOpaque(true);
        addNewFlight.add(vacantSeatNotify, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 130, -1));

        departureDate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departureDate.setText("DEPARTURE DATE");
        addNewFlight.add(departureDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 190, 38));

        vacantSeat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        vacantSeat.setText("VACANT SEAT");
        addNewFlight.add(vacantSeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 150, 39));

        airCodeNotify.setEditable(false);
        airCodeNotify.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        airCodeNotify.setAutoscrolls(false);
        airCodeNotify.setBorder(null);
        airCodeNotify.setFocusable(false);
        airCodeNotify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airCodeNotifyActionPerformed(evt);
            }
        });
        addNewFlight.add(airCodeNotify, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, 130, -1));

        departureTimeFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm a"))));
        departureTimeFormattedField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        departureTimeFormattedField.setActionCommand("<Not Set>");
        addNewFlight.add(departureTimeFormattedField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 200, 130, 40));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("STATUS");
        addNewFlight.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 80, 39));

        jLabel7.setFont(new java.awt.Font("C059", 0, 15)); // NOI18N
        jLabel7.setText("hh:mm a");
        addNewFlight.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 210, 90, -1));

        airplaneCode.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        airplaneCode.setText("AIRPLANE CODE");
        addNewFlight.add(airplaneCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 190, 39));

        seatTypeButtonGroup.add(vipButton);
        vipButton.setText("VIP");
        vipButton.setToolTipText("ok");
        vipButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vipButtonMouseClicked(evt);
            }
        });
        addNewFlight.add(vipButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 75, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addNewFlight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addNewFlight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generateFlightIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateFlightIDMouseClicked
        boolean inputCheck;
          
        inputCheck = allFieldCheck();
        
        if(inputCheck){
            //check this to generate uniqur flight id
            NewFlightComponents.addFlight.setAirplaneCode(airplaneCodeField.getText());
            NewFlightComponents.addFlight.setDepartureDate(departureDateFormattedField.getText());
            NewFlightComponents.addFlight.setDepartureTime(departureTimeFormattedField.getText());
            NewFlightComponents.addFlight.setDestination( (String) destinationComboBox.getSelectedItem()); 
            
            ButtonModel selectedModel = seatTypeButtonGroup.getSelection();
            if (selectedModel == vipButton.getModel()) {
                NewFlightComponents.addFlight.setSeatType(vipButton.getText());
            } else if (selectedModel == regularButton.getModel()) {
                NewFlightComponents.addFlight.setSeatType(regularButton.getText());
            }
            
            genFlightId = NewFlightComponents.generateFlightId();
            
            System.out.print(genFlightId);
            System.out.print(flightExists);
            
            System.out.print(inputCheck);



            if(!flightExists){
                setFlightData();
                setTextConfirmationDialog();
                confirmationDialog.setVisible(true);
            }
        }
       
        
        
       
    }//GEN-LAST:event_generateFlightIDMouseClicked

    private void addFlightCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightCancelActionPerformed
        //dispose all resources

        confirmationDialog.dispose();
    }//GEN-LAST:event_addFlightCancelActionPerformed

    private void addFlightConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightConfirmMouseClicked
        FileWrite.updateFlightData();
        seatTypeButtonGroup.clearSelection();
        confirmationDialog.dispose();
    }//GEN-LAST:event_addFlightConfirmMouseClicked

    private void setRegularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRegularActionPerformed
      seatTypeRegular.dispose();
     
    }//GEN-LAST:event_setRegularActionPerformed

    private void setVipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setVipActionPerformed
        seatTypeVip.dispose();
       
    }//GEN-LAST:event_setVipActionPerformed

    private void okFlightExistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okFlightExistActionPerformed

     
    }//GEN-LAST:event_okFlightExistActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void airplaneCodeFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_airplaneCodeFieldKeyTyped
        airCodeCheck();
    }//GEN-LAST:event_airplaneCodeFieldKeyTyped

    private void airplaneCodeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_airplaneCodeFieldKeyReleased
        airCodeCheck();
    }//GEN-LAST:event_airplaneCodeFieldKeyReleased

    private void airCodeNotifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airCodeNotifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_airCodeNotifyActionPerformed

    private void okFlightExistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okFlightExistMouseClicked
        
        airplaneCodeField.setText(null);
        departureDateFormattedField.setText(null);
        departureTimeFormattedField.setText(null);
        vacantSeatField.setText(null);
        airCodeNotify.setText(null);
        vacantSeatNotify.setText(null);
        flightExist.setVisible(false);
        
        
        
        
    }//GEN-LAST:event_okFlightExistMouseClicked

    private void mainMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuMouseClicked
        Main.newFlightForm.setVisible(false);
    }//GEN-LAST:event_mainMenuMouseClicked

    private void generateFlightIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateFlightIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generateFlightIDActionPerformed

    private void setRegularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setRegularMouseClicked

    }//GEN-LAST:event_setRegularMouseClicked

    private void seatTypeRegularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seatTypeRegularMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_seatTypeRegularMouseClicked

    private void setVipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setVipMouseClicked
        seatTypeVip.dispose();
    }//GEN-LAST:event_setVipMouseClicked

    private void vipButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vipButtonMouseClicked
        isSeatTypeSelected = true;
    }//GEN-LAST:event_vipButtonMouseClicked

    private void regularButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regularButtonMouseClicked
        isSeatTypeSelected = true;
    }//GEN-LAST:event_regularButtonMouseClicked

    public void setFlightData(){
       
        
        
        NewFlightComponents.addFlight.setFlightId(genFlightId);
        NewFlightComponents.addFlight.setAirplaneCode(airplaneCodeField.getText());
        NewFlightComponents.addFlight.setDepartureDate(departureDateFormattedField.getText());
        NewFlightComponents.addFlight.setDepartureTime(departureTimeFormattedField.getText());
        NewFlightComponents.addFlight.setDestination( (String) destinationComboBox.getSelectedItem()); 
        
        ButtonModel selectedModel = seatTypeButtonGroup.getSelection();
        if (selectedModel == vipButton.getModel()) {
                NewFlightComponents.addFlight.setSeatType(vipButton.getText());
        } else if (selectedModel == regularButton.getModel()) {
                NewFlightComponents.addFlight.setSeatType(regularButton.getText());
        }
        
        NewFlightComponents.addFlight.setVacantSeat(vacantSeatField.getText());
        
        ButtonModel statusModel = statusButton.getSelection();
        if (statusModel == statusOk.getModel()) {
                NewFlightComponents.addFlight.setStatus(statusOk.getText());
        } else if (statusModel == statusCancelled.getModel()) {
                NewFlightComponents.addFlight.setStatus(statusCancelled.getText());
        }
       
        if(remarksField.getText().isEmpty()){
             NewFlightComponents.addFlight.setRemarks("Blank");
        } else{
             NewFlightComponents.addFlight.setRemarks(remarksField.getText());
        }
         
    }
    
    public void setTextConfirmationDialog(){
        
        airplaneCodeLabel.setText(airplaneCodeField.getText());
        departureDateLabel.setText(departureDateFormattedField.getText());
        departureTimeLabel.setText(departureTimeFormattedField.getText());
        destinationLabel.setText((String) destinationComboBox.getSelectedItem());
        vacantSeatLabel.setText(vacantSeatField.getText());
        seatTypeLabel.setText( NewFlightComponents.addFlight.getSeatType());
        statusLabel.setText( NewFlightComponents.addFlight.getStatus());
        remarksLabel.setText(remarksField.getText());
        flightIdLabel.setText(genFlightId);
        
        
        
        
        
    }
    
    
    public static void flightCheck(String code){
        
        System.out.println(code + " the is the code");
        if("Exist".equals(code)){
           flightExists = true;
           flightExist.setVisible(true);
           
        } else
        
        if("regular".equals(code)){
           flightExists = true; 
           seatTypeRegular.setVisible(true);
        
        } else
        
        if("vip".equals(code)){
           flightExists = true;
           seatTypeVip.setVisible(true);
        
        }
        
    }
    
    // check all fields in Add New Flight
    public boolean allFieldCheck(){
        
        boolean depDateValid;
        boolean depTimeValid;
        boolean vacantSeatValid;
        boolean airCodeValid;
        boolean seatTypes;
        
        depDateValid = depDateCheck();
        depTimeValid = depTimeCheck();
        vacantSeatValid = vacantSeatCheck();
        airCodeValid = airCodeCheck();
        seatTypes = seatTypeCheck();
        
  
        if(airCodeValid && depDateValid && depTimeValid && vacantSeatValid && seatTypes){
            return true;
        }
        return false;
    }
    
        
    public boolean airCodeCheck(){
         boolean isValid;
         boolean airCodeValid = false;
        
        if(airplaneCodeField.getText().length() > 5){
            isValid = NewFlightComponents.airplaneCodeValid(airplaneCodeField.getText().toUpperCase());

            if(isValid){
                airCodeNotify.setText("correct");
                airCodeValid = true;
            } else{
                airCodeNotify.setText("Invalid Input!");
                airCodeValid = false;
            }
        }
        
        return airCodeValid;
    }
    
    public boolean depDateCheck(){
        
        boolean depDate = false;
        
        if(departureDateFormattedField.getText().length() > 0){
            depDate = true;
        }
        return depDate;
    }
    
    public boolean depTimeCheck(){
        
        boolean depTime = false;
        
        if(departureTimeFormattedField.getText().length() > 0){
            depTime = true;
        }
        return depTime;
    }
    
    public boolean vacantSeatCheck(){
           
        boolean vacantSeat = false;
        
        try{
         if((Integer.parseInt(vacantSeatField.getText())) > 0){
            vacantSeatNotify.setText("correct");
            vacantSeat = true;
         }else{
            vacantSeatNotify.setText("Invalid Input!");
            vacantSeat = false;
        }
        }
        catch(NumberFormatException e){
             vacantSeatNotify.setText("Invalid Input!");
             vacantSeat = false;
        }

       return vacantSeat;
    }
    
    public boolean seatTypeCheck(){
        
        
     
        if(isSeatTypeSelected){
            return true;
        } else {
            return false;
        }
   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFlightCancel;
    private javax.swing.JButton addFlightConfirm;
    private javax.swing.JPanel addNewFlight;
    private javax.swing.JTextField airCodeNotify;
    private javax.swing.JLabel airplaneCode;
    private javax.swing.JLabel airplaneCode2;
    private javax.swing.JTextField airplaneCodeField;
    private javax.swing.JLabel airplaneCodeLabel;
    private javax.swing.JPanel bookFlight;
    private javax.swing.JDialog confirmationDialog;
    private javax.swing.JTabbedPane create;
    private javax.swing.JLabel departureDate;
    private javax.swing.JLabel departureDate2;
    private javax.swing.JFormattedTextField departureDateFormattedField;
    private javax.swing.JLabel departureDateLabel;
    private javax.swing.JLabel departureTime;
    private javax.swing.JLabel departureTime2;
    private javax.swing.JFormattedTextField departureTimeFormattedField;
    private javax.swing.JLabel departureTimeLabel;
    private javax.swing.JLabel destination;
    private javax.swing.JLabel destination2;
    private javax.swing.JComboBox<String> destinationComboBox;
    private javax.swing.JLabel destinationLabel;
    private static javax.swing.JDialog flightExist;
    private javax.swing.JLabel flightId;
    private javax.swing.JLabel flightId2;
    private javax.swing.JTextField flightIdField;
    private javax.swing.JLabel flightIdLabel;
    private javax.swing.JButton generateFlightID;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton mainMenu;
    private javax.swing.JButton okFlightExist;
    private static javax.swing.JCheckBox regularButton;
    private javax.swing.JTextField remarksField;
    private javax.swing.JLabel remarksLabel;
    private javax.swing.JLabel seatType;
    private javax.swing.JLabel seatType2;
    private javax.swing.ButtonGroup seatTypeButtonGroup;
    private javax.swing.JLabel seatTypeLabel;
    private static javax.swing.JDialog seatTypeRegular;
    private static javax.swing.JDialog seatTypeVip;
    private javax.swing.JButton setRegular;
    private javax.swing.JButton setVip;
    private javax.swing.ButtonGroup statusButton;
    private javax.swing.JCheckBox statusCancelled;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JCheckBox statusOk;
    private javax.swing.JLabel vacantSeat;
    private javax.swing.JLabel vacantSeat2;
    private javax.swing.JFormattedTextField vacantSeatField;
    private javax.swing.JLabel vacantSeatLabel;
    private javax.swing.JTextField vacantSeatNotify;
    private static javax.swing.JCheckBox vipButton;
    // End of variables declaration//GEN-END:variables
}
